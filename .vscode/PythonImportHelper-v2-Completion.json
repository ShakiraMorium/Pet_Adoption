[
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework_nested",
        "description": "rest_framework_nested",
        "isExtraImport": true,
        "detail": "rest_framework_nested",
        "documentation": {}
    },
    {
        "label": "CartItemViewSet",
        "importPath": "order.views",
        "description": "order.views",
        "isExtraImport": true,
        "detail": "order.views",
        "documentation": {}
    },
    {
        "label": "OrderViewset",
        "importPath": "order.views",
        "description": "order.views",
        "isExtraImport": true,
        "detail": "order.views",
        "documentation": {}
    },
    {
        "label": "OrderViewset",
        "importPath": "order.views",
        "description": "order.views",
        "isExtraImport": true,
        "detail": "order.views",
        "documentation": {}
    },
    {
        "label": "PetViewSet",
        "importPath": "pets.views",
        "description": "pets.views",
        "isExtraImport": true,
        "detail": "pets.views",
        "documentation": {}
    },
    {
        "label": "PetCategoryViewSet",
        "importPath": "pets.views",
        "description": "pets.views",
        "isExtraImport": true,
        "detail": "pets.views",
        "documentation": {}
    },
    {
        "label": "PetReviewViewSet",
        "importPath": "pets.views",
        "description": "pets.views",
        "isExtraImport": true,
        "detail": "pets.views",
        "documentation": {}
    },
    {
        "label": "CartRequestViewSet",
        "importPath": "pets.views",
        "description": "pets.views",
        "isExtraImport": true,
        "detail": "pets.views",
        "documentation": {}
    },
    {
        "label": "PetImageViewSet",
        "importPath": "pets.views",
        "description": "pets.views",
        "isExtraImport": true,
        "detail": "pets.views",
        "documentation": {}
    },
    {
        "label": "PageNumberPagination",
        "importPath": "rest_framework.pagination",
        "description": "rest_framework.pagination",
        "isExtraImport": true,
        "detail": "rest_framework.pagination",
        "documentation": {}
    },
    {
        "label": "PageNumberPagination",
        "importPath": "rest_framework.pagination",
        "description": "rest_framework.pagination",
        "isExtraImport": true,
        "detail": "rest_framework.pagination",
        "documentation": {}
    },
    {
        "label": "Pet",
        "importPath": "pets.models",
        "description": "pets.models",
        "isExtraImport": true,
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "Pet",
        "importPath": "pets.models",
        "description": "pets.models",
        "isExtraImport": true,
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "Pet",
        "importPath": "pets.models",
        "description": "pets.models",
        "isExtraImport": true,
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "Pet",
        "importPath": "pets.models",
        "description": "pets.models",
        "isExtraImport": true,
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "Pet",
        "importPath": "pets.models",
        "description": "pets.models",
        "isExtraImport": true,
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "PetCategory",
        "importPath": "pets.models",
        "description": "pets.models",
        "isExtraImport": true,
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "CartRequest",
        "importPath": "pets.models",
        "description": "pets.models",
        "isExtraImport": true,
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "Pet",
        "importPath": "pets.models",
        "description": "pets.models",
        "isExtraImport": true,
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "PetCategory",
        "importPath": "pets.models",
        "description": "pets.models",
        "isExtraImport": true,
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "PetReview",
        "importPath": "pets.models",
        "description": "pets.models",
        "isExtraImport": true,
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "PetImage",
        "importPath": "pets.models",
        "description": "pets.models",
        "isExtraImport": true,
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "CartRequest",
        "importPath": "pets.models",
        "description": "pets.models",
        "isExtraImport": true,
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "PetCategory",
        "importPath": "pets.models",
        "description": "pets.models",
        "isExtraImport": true,
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "Pet",
        "importPath": "pets.models",
        "description": "pets.models",
        "isExtraImport": true,
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "PetImage",
        "importPath": "pets.models",
        "description": "pets.models",
        "isExtraImport": true,
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "PetReview",
        "importPath": "pets.models",
        "description": "pets.models",
        "isExtraImport": true,
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "CartRequest",
        "importPath": "pets.models",
        "description": "pets.models",
        "isExtraImport": true,
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "Pet",
        "importPath": "pets.models",
        "description": "pets.models",
        "isExtraImport": true,
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "PetCategory",
        "importPath": "pets.models",
        "description": "pets.models",
        "isExtraImport": true,
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "PetImage",
        "importPath": "pets.models",
        "description": "pets.models",
        "isExtraImport": true,
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "PetReview",
        "importPath": "pets.models",
        "description": "pets.models",
        "isExtraImport": true,
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "CartRequest",
        "importPath": "pets.models",
        "description": "pets.models",
        "isExtraImport": true,
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "django.core.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MinValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MinValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MinValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MaxValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "PetUser",
        "importPath": "users.models",
        "description": "users.models",
        "isExtraImport": true,
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "PetUser",
        "importPath": "users.models",
        "description": "users.models",
        "isExtraImport": true,
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "PetUser",
        "importPath": "users.models",
        "description": "users.models",
        "isExtraImport": true,
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "PetUser",
        "importPath": "users.models",
        "description": "users.models",
        "isExtraImport": true,
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "uuid4",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "uuid4",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "cart.models",
        "description": "cart.models",
        "isExtraImport": true,
        "detail": "cart.models",
        "documentation": {}
    },
    {
        "label": "CartItem",
        "importPath": "cart.models",
        "description": "cart.models",
        "isExtraImport": true,
        "detail": "cart.models",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "cart.models",
        "description": "cart.models",
        "isExtraImport": true,
        "detail": "cart.models",
        "documentation": {}
    },
    {
        "label": "CartItem",
        "importPath": "cart.models",
        "description": "cart.models",
        "isExtraImport": true,
        "detail": "cart.models",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "cart.models",
        "description": "cart.models",
        "isExtraImport": true,
        "detail": "cart.models",
        "documentation": {}
    },
    {
        "label": "CartItem",
        "importPath": "cart.models",
        "description": "cart.models",
        "isExtraImport": true,
        "detail": "cart.models",
        "documentation": {}
    },
    {
        "label": "CartItem",
        "importPath": "cart.models",
        "description": "cart.models",
        "isExtraImport": true,
        "detail": "cart.models",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "cart.models",
        "description": "cart.models",
        "isExtraImport": true,
        "detail": "cart.models",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "cart.models",
        "description": "cart.models",
        "isExtraImport": true,
        "detail": "cart.models",
        "documentation": {}
    },
    {
        "label": "CartItem",
        "importPath": "cart.models",
        "description": "cart.models",
        "isExtraImport": true,
        "detail": "cart.models",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "cart.models",
        "description": "cart.models",
        "isExtraImport": true,
        "detail": "cart.models",
        "documentation": {}
    },
    {
        "label": "CartItem",
        "importPath": "cart.models",
        "description": "cart.models",
        "isExtraImport": true,
        "detail": "cart.models",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "cart.models",
        "description": "cart.models",
        "isExtraImport": true,
        "detail": "cart.models",
        "documentation": {}
    },
    {
        "label": "PetSerializer",
        "importPath": "pets.serializers",
        "description": "pets.serializers",
        "isExtraImport": true,
        "detail": "pets.serializers",
        "documentation": {}
    },
    {
        "label": "PetSerializer",
        "importPath": "pets.serializers",
        "description": "pets.serializers",
        "isExtraImport": true,
        "detail": "pets.serializers",
        "documentation": {}
    },
    {
        "label": "PetSerializer",
        "importPath": "pets.serializers",
        "description": "pets.serializers",
        "isExtraImport": true,
        "detail": "pets.serializers",
        "documentation": {}
    },
    {
        "label": "PetCategorySerializer",
        "importPath": "pets.serializers",
        "description": "pets.serializers",
        "isExtraImport": true,
        "detail": "pets.serializers",
        "documentation": {}
    },
    {
        "label": "PetImageSerializer",
        "importPath": "pets.serializers",
        "description": "pets.serializers",
        "isExtraImport": true,
        "detail": "pets.serializers",
        "documentation": {}
    },
    {
        "label": "PetReviewSerializer",
        "importPath": "pets.serializers",
        "description": "pets.serializers",
        "isExtraImport": true,
        "detail": "pets.serializers",
        "documentation": {}
    },
    {
        "label": "CartRequestSerializer",
        "importPath": "pets.serializers",
        "description": "pets.serializers",
        "isExtraImport": true,
        "detail": "pets.serializers",
        "documentation": {}
    },
    {
        "label": "CartService",
        "importPath": "cart.services",
        "description": "cart.services",
        "isExtraImport": true,
        "detail": "cart.services",
        "documentation": {}
    },
    {
        "label": "CartService",
        "importPath": "cart.services",
        "description": "cart.services",
        "isExtraImport": true,
        "detail": "cart.services",
        "documentation": {}
    },
    {
        "label": "PermissionDenied",
        "importPath": "rest_framework.exceptions",
        "description": "rest_framework.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework.exceptions",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "rest_framework.exceptions",
        "description": "rest_framework.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework.exceptions",
        "documentation": {}
    },
    {
        "label": "PermissionDenied",
        "importPath": "rest_framework.exceptions",
        "description": "rest_framework.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework.exceptions",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "rest_framework.exceptions",
        "description": "rest_framework.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework.exceptions",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "CreateModelMixin",
        "importPath": "rest_framework.mixins",
        "description": "rest_framework.mixins",
        "isExtraImport": true,
        "detail": "rest_framework.mixins",
        "documentation": {}
    },
    {
        "label": "RetrieveModelMixin",
        "importPath": "rest_framework.mixins",
        "description": "rest_framework.mixins",
        "isExtraImport": true,
        "detail": "rest_framework.mixins",
        "documentation": {}
    },
    {
        "label": "DestroyModelMixin",
        "importPath": "rest_framework.mixins",
        "description": "rest_framework.mixins",
        "isExtraImport": true,
        "detail": "rest_framework.mixins",
        "documentation": {}
    },
    {
        "label": "CreateModelMixin",
        "importPath": "rest_framework.mixins",
        "description": "rest_framework.mixins",
        "isExtraImport": true,
        "detail": "rest_framework.mixins",
        "documentation": {}
    },
    {
        "label": "RetrieveModelMixin",
        "importPath": "rest_framework.mixins",
        "description": "rest_framework.mixins",
        "isExtraImport": true,
        "detail": "rest_framework.mixins",
        "documentation": {}
    },
    {
        "label": "DestroyModelMixin",
        "importPath": "rest_framework.mixins",
        "description": "rest_framework.mixins",
        "isExtraImport": true,
        "detail": "rest_framework.mixins",
        "documentation": {}
    },
    {
        "label": "GenericViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "ModelViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "GenericViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "ModelViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "ModelViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAdminUser",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAdminUser",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "cart",
        "description": "cart",
        "isExtraImport": true,
        "detail": "cart",
        "documentation": {}
    },
    {
        "label": "CartSerializer",
        "importPath": "cart.serializers",
        "description": "cart.serializers",
        "isExtraImport": true,
        "detail": "cart.serializers",
        "documentation": {}
    },
    {
        "label": "CartItemSerializer",
        "importPath": "cart.serializers",
        "description": "cart.serializers",
        "isExtraImport": true,
        "detail": "cart.serializers",
        "documentation": {}
    },
    {
        "label": "AddCartItemSerializer",
        "importPath": "cart.serializers",
        "description": "cart.serializers",
        "isExtraImport": true,
        "detail": "cart.serializers",
        "documentation": {}
    },
    {
        "label": "UpdateCartItemSerializer",
        "importPath": "cart.serializers",
        "description": "cart.serializers",
        "isExtraImport": true,
        "detail": "cart.serializers",
        "documentation": {}
    },
    {
        "label": "AddCartItemSerializer",
        "importPath": "cart.serializers",
        "description": "cart.serializers",
        "isExtraImport": true,
        "detail": "cart.serializers",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "CartItem",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "OrderItem",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "CartItem",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "OrderItem",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "CartItem",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "OrderItem",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "Cart",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "CartItem",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "OrderItem",
        "importPath": "order.models",
        "description": "order.models",
        "isExtraImport": true,
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "OrderService",
        "importPath": "order.services",
        "description": "order.services",
        "isExtraImport": true,
        "detail": "order.services",
        "documentation": {}
    },
    {
        "label": "OrderService",
        "importPath": "order.services",
        "description": "order.services",
        "isExtraImport": true,
        "detail": "order.services",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "order",
        "description": "order",
        "isExtraImport": true,
        "detail": "order",
        "documentation": {}
    },
    {
        "label": "CartSerializer",
        "importPath": "order.serializers",
        "description": "order.serializers",
        "isExtraImport": true,
        "detail": "order.serializers",
        "documentation": {}
    },
    {
        "label": "CartItemSerializer",
        "importPath": "order.serializers",
        "description": "order.serializers",
        "isExtraImport": true,
        "detail": "order.serializers",
        "documentation": {}
    },
    {
        "label": "AddCartItemSerializer",
        "importPath": "order.serializers",
        "description": "order.serializers",
        "isExtraImport": true,
        "detail": "order.serializers",
        "documentation": {}
    },
    {
        "label": "UpdateCartItemSerializer",
        "importPath": "order.serializers",
        "description": "order.serializers",
        "isExtraImport": true,
        "detail": "order.serializers",
        "documentation": {}
    },
    {
        "label": "cloudinary.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "cloudinary.models",
        "description": "cloudinary.models",
        "detail": "cloudinary.models",
        "documentation": {}
    },
    {
        "label": "CloudinaryField",
        "importPath": "cloudinary.models",
        "description": "cloudinary.models",
        "isExtraImport": true,
        "detail": "cloudinary.models",
        "documentation": {}
    },
    {
        "label": "pets.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pets.validators",
        "description": "pets.validators",
        "detail": "pets.validators",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "pets",
        "description": "pets",
        "isExtraImport": true,
        "detail": "pets",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "pets",
        "description": "pets",
        "isExtraImport": true,
        "detail": "pets",
        "documentation": {}
    },
    {
        "label": "FilterSet",
        "importPath": "django_filters.rest_framework",
        "description": "django_filters.rest_framework",
        "isExtraImport": true,
        "detail": "django_filters.rest_framework",
        "documentation": {}
    },
    {
        "label": "DjangoFilterBackend",
        "importPath": "django_filters.rest_framework",
        "description": "django_filters.rest_framework",
        "isExtraImport": true,
        "detail": "django_filters.rest_framework",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "SearchFilter",
        "importPath": "rest_framework.filters",
        "description": "rest_framework.filters",
        "isExtraImport": true,
        "detail": "rest_framework.filters",
        "documentation": {}
    },
    {
        "label": "OrderingFilter",
        "importPath": "rest_framework.filters",
        "description": "rest_framework.filters",
        "isExtraImport": true,
        "detail": "rest_framework.filters",
        "documentation": {}
    },
    {
        "label": "swagger_auto_schema",
        "importPath": "drf_yasg.utils",
        "description": "drf_yasg.utils",
        "isExtraImport": true,
        "detail": "drf_yasg.utils",
        "documentation": {}
    },
    {
        "label": "PetFilter",
        "importPath": "pets.filters",
        "description": "pets.filters",
        "isExtraImport": true,
        "detail": "pets.filters",
        "documentation": {}
    },
    {
        "label": "DefaultPagination",
        "importPath": "pets.paginations",
        "description": "pets.paginations",
        "isExtraImport": true,
        "detail": "pets.paginations",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "config",
        "importPath": "decouple",
        "description": "decouple",
        "isExtraImport": true,
        "detail": "decouple",
        "documentation": {}
    },
    {
        "label": "cloudinary",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "cloudinary",
        "description": "cloudinary",
        "detail": "cloudinary",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_schema_view",
        "importPath": "drf_yasg.views",
        "description": "drf_yasg.views",
        "isExtraImport": true,
        "detail": "drf_yasg.views",
        "documentation": {}
    },
    {
        "label": "openapi",
        "importPath": "drf_yasg",
        "description": "drf_yasg",
        "isExtraImport": true,
        "detail": "drf_yasg",
        "documentation": {}
    },
    {
        "label": "debug_toolbar_urls",
        "importPath": "debug_toolbar.toolbar",
        "description": "debug_toolbar.toolbar",
        "isExtraImport": true,
        "detail": "debug_toolbar.toolbar",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "importPath": "django.contrib.auth.admin",
        "description": "django.contrib.auth.admin",
        "isExtraImport": true,
        "detail": "django.contrib.auth.admin",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.base_user",
        "description": "django.contrib.auth.base_user",
        "isExtraImport": true,
        "detail": "django.contrib.auth.base_user",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "CustomUserManager",
        "importPath": "users.managers",
        "description": "users.managers",
        "isExtraImport": true,
        "detail": "users.managers",
        "documentation": {}
    },
    {
        "label": "UserCreateSerializer",
        "importPath": "djoser.serializers",
        "description": "djoser.serializers",
        "isExtraImport": true,
        "detail": "djoser.serializers",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "importPath": "djoser.serializers",
        "description": "djoser.serializers",
        "isExtraImport": true,
        "detail": "djoser.serializers",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "ApiConfig",
        "kind": 6,
        "importPath": "api.apps",
        "description": "api.apps",
        "peekOfCode": "class ApiConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'api'",
        "detail": "api.apps",
        "documentation": {}
    },
    {
        "label": "IsAdminOrReadOnly",
        "kind": 6,
        "importPath": "api.permission",
        "description": "api.permission",
        "peekOfCode": "class IsAdminOrReadOnly(permissions.BasePermission):\n    def has_permission(self, request, view):\n        if request.method in permissions.SAFE_METHODS:\n            return True\n        return bool(request.user and request.user.is_staff)\nclass FullDjangoModelPermission(permissions.DjangoModelPermissions):\n    def __init__(self):\n        self.perms_map['GET'] = ['%(app_label)s.view_%(model_name)s']",
        "detail": "api.permission",
        "documentation": {}
    },
    {
        "label": "FullDjangoModelPermission",
        "kind": 6,
        "importPath": "api.permission",
        "description": "api.permission",
        "peekOfCode": "class FullDjangoModelPermission(permissions.DjangoModelPermissions):\n    def __init__(self):\n        self.perms_map['GET'] = ['%(app_label)s.view_%(model_name)s']",
        "detail": "api.permission",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "api.urls",
        "description": "api.urls",
        "peekOfCode": "router = routers.DefaultRouter()\nrouter.register('pets', PetViewSet, basename='pets')\nrouter.register('categories', PetCategoryViewSet, basename='categories')\nrouter.register('carts', CartRequestViewSet, basename='carts')\nrouter.register('orders', OrderViewset, basename='orders')\n# Nested routes: reviews under pets\npet_router = routers.NestedDefaultRouter(router, 'pets', lookup='pet')\npet_router.register('reviews', PetReviewViewSet, basename='pet-reviews')\npet_router.register('images', PetImageViewSet,basename='pet-images')\ncart_router = routers.NestedDefaultRouter(router, 'carts', lookup='cart')",
        "detail": "api.urls",
        "documentation": {}
    },
    {
        "label": "pet_router",
        "kind": 5,
        "importPath": "api.urls",
        "description": "api.urls",
        "peekOfCode": "pet_router = routers.NestedDefaultRouter(router, 'pets', lookup='pet')\npet_router.register('reviews', PetReviewViewSet, basename='pet-reviews')\npet_router.register('images', PetImageViewSet,basename='pet-images')\ncart_router = routers.NestedDefaultRouter(router, 'carts', lookup='cart')\ncart_router.register('items', CartItemViewSet, basename='cart-item')\nurlpatterns = [\n    path('', include(router.urls)),\n    path('', include(pet_router.urls)),\n    path('', include(cart_router.urls)),\n   # Djoser core endpoints (register, users, reset, etc.)",
        "detail": "api.urls",
        "documentation": {}
    },
    {
        "label": "cart_router",
        "kind": 5,
        "importPath": "api.urls",
        "description": "api.urls",
        "peekOfCode": "cart_router = routers.NestedDefaultRouter(router, 'carts', lookup='cart')\ncart_router.register('items', CartItemViewSet, basename='cart-item')\nurlpatterns = [\n    path('', include(router.urls)),\n    path('', include(pet_router.urls)),\n    path('', include(cart_router.urls)),\n   # Djoser core endpoints (register, users, reset, etc.)\n    path('auth/', include('djoser.urls')),\n    # JWT endpoints (login/create, refresh, verify)\n    path('auth/', include('djoser.urls.jwt')),",
        "detail": "api.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "api.urls",
        "description": "api.urls",
        "peekOfCode": "urlpatterns = [\n    path('', include(router.urls)),\n    path('', include(pet_router.urls)),\n    path('', include(cart_router.urls)),\n   # Djoser core endpoints (register, users, reset, etc.)\n    path('auth/', include('djoser.urls')),\n    # JWT endpoints (login/create, refresh, verify)\n    path('auth/', include('djoser.urls.jwt')),\n]",
        "detail": "api.urls",
        "documentation": {}
    },
    {
        "label": "PetPagination",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class PetPagination(PageNumberPagination):\n    page_size = 10  # Number of pets per page\n    page_size_query_param = 'page_size'\n    max_page_size = 50\n# List and Create Pets (paginated)\nclass PetListAPI(generics.ListCreateAPIView):\n    queryset = Pet.objects.all()\n    serializer_class = PetSerializer\n    pagination_class = PetPagination  # enable pagination\n# Retrieve, Update, Delete a single pet by ID",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "PetListAPI",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class PetListAPI(generics.ListCreateAPIView):\n    queryset = Pet.objects.all()\n    serializer_class = PetSerializer\n    pagination_class = PetPagination  # enable pagination\n# Retrieve, Update, Delete a single pet by ID\nclass PetDetailAPI(generics.RetrieveUpdateDestroyAPIView):\n    queryset = Pet.objects.all()\n    serializer_class = PetSerializer\n    lookup_field = 'id'  # if your URL is <int:id>",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "PetDetailAPI",
        "kind": 6,
        "importPath": "api.views",
        "description": "api.views",
        "peekOfCode": "class PetDetailAPI(generics.RetrieveUpdateDestroyAPIView):\n    queryset = Pet.objects.all()\n    serializer_class = PetSerializer\n    lookup_field = 'id'  # if your URL is <int:id>",
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "CartAdmin",
        "kind": 6,
        "importPath": "cart.admin",
        "description": "cart.admin",
        "peekOfCode": "class CartAdmin(admin.ModelAdmin):\n    list_display = ['user', 'created_at']\n@admin.register(CartItem)\nclass CartItemAdmin(admin.ModelAdmin):\n    list_display = ['cart', 'pet', 'quantity']\n@admin.register(Adoption)\nclass AdoptionAdmin(admin.ModelAdmin):\n    list_display = ['user', 'status', 'total_price', 'created_at']\n@admin.register(AdoptionItem)\nclass AdoptionItemAdmin(admin.ModelAdmin):",
        "detail": "cart.admin",
        "documentation": {}
    },
    {
        "label": "CartItemAdmin",
        "kind": 6,
        "importPath": "cart.admin",
        "description": "cart.admin",
        "peekOfCode": "class CartItemAdmin(admin.ModelAdmin):\n    list_display = ['cart', 'pet', 'quantity']\n@admin.register(Adoption)\nclass AdoptionAdmin(admin.ModelAdmin):\n    list_display = ['user', 'status', 'total_price', 'created_at']\n@admin.register(AdoptionItem)\nclass AdoptionItemAdmin(admin.ModelAdmin):\n    list_display = ['adoption', 'pet', 'quantity', 'price', 'total_price']",
        "detail": "cart.admin",
        "documentation": {}
    },
    {
        "label": "AdoptionAdmin",
        "kind": 6,
        "importPath": "cart.admin",
        "description": "cart.admin",
        "peekOfCode": "class AdoptionAdmin(admin.ModelAdmin):\n    list_display = ['user', 'status', 'total_price', 'created_at']\n@admin.register(AdoptionItem)\nclass AdoptionItemAdmin(admin.ModelAdmin):\n    list_display = ['adoption', 'pet', 'quantity', 'price', 'total_price']",
        "detail": "cart.admin",
        "documentation": {}
    },
    {
        "label": "AdoptionItemAdmin",
        "kind": 6,
        "importPath": "cart.admin",
        "description": "cart.admin",
        "peekOfCode": "class AdoptionItemAdmin(admin.ModelAdmin):\n    list_display = ['adoption', 'pet', 'quantity', 'price', 'total_price']",
        "detail": "cart.admin",
        "documentation": {}
    },
    {
        "label": "CartConfig",
        "kind": 6,
        "importPath": "cart.apps",
        "description": "cart.apps",
        "peekOfCode": "class CartConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'cart'",
        "detail": "cart.apps",
        "documentation": {}
    },
    {
        "label": "Cart",
        "kind": 6,
        "importPath": "cart.models",
        "description": "cart.models",
        "peekOfCode": "class Cart(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid4, editable=False)\n    user = models.OneToOneField(\n        PetUser, on_delete=models.CASCADE, related_name=\"cart\"\n    )\n    created_at = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return f\"Cart of {self.user.first_name}\"\nclass CartItem(models.Model):\n    cart = models.ForeignKey(",
        "detail": "cart.models",
        "documentation": {}
    },
    {
        "label": "CartItem",
        "kind": 6,
        "importPath": "cart.models",
        "description": "cart.models",
        "peekOfCode": "class CartItem(models.Model):\n    cart = models.ForeignKey(\n        Cart, on_delete=models.CASCADE, related_name=\"items_cart\"\n    )\n    pet = models.ForeignKey(Pet, on_delete=models.CASCADE)\n    quantity = models.PositiveIntegerField(validators=[MinValueValidator(1)])\n    class Meta:\n        unique_together = [[\"cart\", \"pet\"]]\n    def __str__(self):\n        return f\"{self.quantity} x {self.pet.name}\"",
        "detail": "cart.models",
        "documentation": {}
    },
    {
        "label": "Adoption",
        "kind": 6,
        "importPath": "cart.models",
        "description": "cart.models",
        "peekOfCode": "class Adoption(models.Model):\n    NOT_PAID = \"Not Paid\"\n    READY_TO_SHIP = \"Ready To Ship\"\n    SHIPPED = \"Shipped\"\n    DELIVERED = \"Delivered\"\n    CANCELED = \"Canceled\"\n    STATUS_CHOICES = [\n        (NOT_PAID, \"Not Paid\"),\n        (READY_TO_SHIP, \"Ready To Ship\"),\n        (SHIPPED, \"Shipped\"),",
        "detail": "cart.models",
        "documentation": {}
    },
    {
        "label": "AdoptionItem",
        "kind": 6,
        "importPath": "cart.models",
        "description": "cart.models",
        "peekOfCode": "class AdoptionItem(models.Model):\n    adoption = models.ForeignKey(\n        Adoption, on_delete=models.CASCADE, related_name=\"items\"\n    )\n    pet = models.ForeignKey(Pet, on_delete=models.CASCADE)\n    quantity = models.PositiveIntegerField()\n    price = models.DecimalField(max_digits=10, decimal_places=2, default=0)\n    total_price = models.DecimalField(max_digits=12, decimal_places=2)\n    def __str__(self):\n        return f\"{self.quantity} x {self.pet.name}\"",
        "detail": "cart.models",
        "documentation": {}
    },
    {
        "label": "EmptySerializer",
        "kind": 6,
        "importPath": "cart.serializers",
        "description": "cart.serializers",
        "peekOfCode": "class EmptySerializer(serializers.Serializer):\n    pass\n# Simple Pet Serializer\nclass SimplePetSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Pet\n        fields = ['id', 'name', 'adoption_fee']\n# Add Cart Item Serializer\nclass AddCartItemSerializer(serializers.ModelSerializer):\n    pet_id = serializers.IntegerField()",
        "detail": "cart.serializers",
        "documentation": {}
    },
    {
        "label": "SimplePetSerializer",
        "kind": 6,
        "importPath": "cart.serializers",
        "description": "cart.serializers",
        "peekOfCode": "class SimplePetSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Pet\n        fields = ['id', 'name', 'adoption_fee']\n# Add Cart Item Serializer\nclass AddCartItemSerializer(serializers.ModelSerializer):\n    pet_id = serializers.IntegerField()\n    class Meta:\n        model = CartItem\n        fields = ['id', 'pet_id', 'quantity']",
        "detail": "cart.serializers",
        "documentation": {}
    },
    {
        "label": "AddCartItemSerializer",
        "kind": 6,
        "importPath": "cart.serializers",
        "description": "cart.serializers",
        "peekOfCode": "class AddCartItemSerializer(serializers.ModelSerializer):\n    pet_id = serializers.IntegerField()\n    class Meta:\n        model = CartItem\n        fields = ['id', 'pet_id', 'quantity']\n    def save(self, **kwargs):\n        cart_id = self.context['cart_id']\n        pet_id = self.validated_data['pet_id']\n        quantity = self.validated_data['quantity']\n        try:",
        "detail": "cart.serializers",
        "documentation": {}
    },
    {
        "label": "UpdateCartItemSerializer",
        "kind": 6,
        "importPath": "cart.serializers",
        "description": "cart.serializers",
        "peekOfCode": "class UpdateCartItemSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = CartItem\n        fields = ['quantity']\n# Cart Item Serializer\nclass CartItemSerializer(serializers.ModelSerializer):\n    pet = SimplePetSerializer()\n    total_price = serializers.SerializerMethodField(method_name='get_total_price')\n    class Meta:\n        model = CartItem",
        "detail": "cart.serializers",
        "documentation": {}
    },
    {
        "label": "CartItemSerializer",
        "kind": 6,
        "importPath": "cart.serializers",
        "description": "cart.serializers",
        "peekOfCode": "class CartItemSerializer(serializers.ModelSerializer):\n    pet = SimplePetSerializer()\n    total_price = serializers.SerializerMethodField(method_name='get_total_price')\n    class Meta:\n        model = CartItem\n        fields = ['id', 'pet', 'quantity', 'total_price']\n    def get_total_price(self, cart_item: CartItem):\n        return cart_item.quantity * cart_item.pet.adoption_fee\n# Cart Serializer\nclass CartSerializer(serializers.ModelSerializer):",
        "detail": "cart.serializers",
        "documentation": {}
    },
    {
        "label": "CartSerializer",
        "kind": 6,
        "importPath": "cart.serializers",
        "description": "cart.serializers",
        "peekOfCode": "class CartSerializer(serializers.ModelSerializer):\n    items = CartItemSerializer(many=True, read_only=True)\n    total_price = serializers.SerializerMethodField(method_name='get_total_price')\n    class Meta:\n        model = Cart\n        fields = ['id', 'user', 'items', 'total_price']\n        read_only_fields = ['user']\n    def get_total_price(self, cart: Cart):\n        return sum(\n            [item.pet.cart_fee * item.quantity for item in cart.items.all()]",
        "detail": "cart.serializers",
        "documentation": {}
    },
    {
        "label": "CreateCartSerializer",
        "kind": 6,
        "importPath": "cart.serializers",
        "description": "cart.serializers",
        "peekOfCode": "class CreateCartSerializer(serializers.Serializer):\n    cart_id = serializers.UUIDField()\n    def validate_cart_id(self, cart_id):\n        if not Cart.objects.filter(pk=cart_id).exists():\n            raise serializers.ValidationError(\"No cart found with this id\")\n        if not CartItem.objects.filter(cart_id=cart_id).exists():\n            raise serializers.ValidationError(\"Cart is empty\")\n        return cart_id\n    def create(self, validated_data):\n        user_id = self.context['user_id']",
        "detail": "cart.serializers",
        "documentation": {}
    },
    {
        "label": "CartItemSerializer",
        "kind": 6,
        "importPath": "cart.serializers",
        "description": "cart.serializers",
        "peekOfCode": "class CartItemSerializer(serializers.ModelSerializer):\n    pet = SimplePetSerializer()\n    class Meta:\n        model = CartItem\n        fields = ['id', 'pet', 'price', 'quantity', 'total_price']\n# Update cart (status only)\nclass UpdateCartSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Cart\n        fields = ['status']",
        "detail": "cart.serializers",
        "documentation": {}
    },
    {
        "label": "UpdateCartSerializer",
        "kind": 6,
        "importPath": "cart.serializers",
        "description": "cart.serializers",
        "peekOfCode": "class UpdateCartSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Cart\n        fields = ['status']\n# cart Serializer\nclass CartSerializer(serializers.ModelSerializer):\n    items = CartItemSerializer(many=True)\n    class Meta:\n        model = Cart\n        fields = ['id', 'user', 'status', 'total_price', 'created_at', 'items']",
        "detail": "cart.serializers",
        "documentation": {}
    },
    {
        "label": "CartSerializer",
        "kind": 6,
        "importPath": "cart.serializers",
        "description": "cart.serializers",
        "peekOfCode": "class CartSerializer(serializers.ModelSerializer):\n    items = CartItemSerializer(many=True)\n    class Meta:\n        model = Cart\n        fields = ['id', 'user', 'status', 'total_price', 'created_at', 'items']",
        "detail": "cart.serializers",
        "documentation": {}
    },
    {
        "label": "CartService",
        "kind": 6,
        "importPath": "cart.services",
        "description": "cart.services",
        "peekOfCode": "class CartService:\n    @staticmethod\n    def create_cart(user_id, cart_id):\n        with transaction.atomic():\n            cart = Cart.objects.get(pk=cart_id)\n            cart_items = cart.items.select_related('pet').all()\n            total_price = sum([item.pet.cart_fee * item.quantity for item in cart_items])\n            cart = Cart.objects.create(\n                user_id=user_id,\n                total_price=total_price",
        "detail": "cart.services",
        "documentation": {}
    },
    {
        "label": "CartViewSet",
        "kind": 6,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "class CartViewSet(CreateModelMixin, RetrieveModelMixin, DestroyModelMixin, GenericViewSet):\n    serializer_class = CartSerializer\n    permission_classes = [IsAuthenticated]\n    def perform_create(self, serializer):\n        serializer.save(user=self.request.user)\n    def get_queryset(self):\n        if getattr(self, 'swagger_fake_view', False):\n            return Cart.objects.none()\n        return Cart.objects.prefetch_related('items__pet').filter(user=self.request.user)\n    def create(self, request, *args, **kwargs):",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "CartItemViewSet",
        "kind": 6,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "class CartItemViewSet(ModelViewSet):\n    http_method_names = ['get', 'post', 'patch', 'delete']\n    def get_serializer_class(self):\n        if self.request.method == 'POST':\n            return AddCartItemSerializer\n        elif self.request.method == 'PATCH':\n            return UpdateCartItemSerializer\n        return CartItemSerializer\n    def get_serializer_context(self):\n        context = super().get_serializer_context()",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "CartViewSet",
        "kind": 6,
        "importPath": "cart.views",
        "description": "cart.views",
        "peekOfCode": "class CartViewSet(ModelViewSet):\n    http_method_names = ['get', 'post', 'delete', 'patch', 'head', 'options']\n    @action(detail=True, methods=['post'])\n    def cancel(self, request, pk=None):\n        cart = self.get_object()\n        CartService.cancel_cart(cart=cart, user=request.user)\n        return Response({'status': 'Adoption canceled'})\n    @action(detail=True, methods=['patch'])\n    def update_status(self, request, pk=None):\n        cart = self.get_object()",
        "detail": "cart.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "order.migrations.0001_initial",
        "description": "order.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('pets', '0002_petreview_updated_at_alter_petimage_image_and_more'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Cart',\n            fields=[",
        "detail": "order.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "CartAdmin",
        "kind": 6,
        "importPath": "order.admin",
        "description": "order.admin",
        "peekOfCode": "class CartAdmin(admin.ModelAdmin):\n    list_display = ['id', 'user']\n    search_fields = ['user__email']\n    list_filter = ['created_at']  \n# Order admin\n@admin.register(Order)\nclass OrderAdmin(admin.ModelAdmin):\n    list_display = ['id', 'user', 'status']\n    search_fields = ['user__email']\n    list_filter = ['status', 'created_at']  ",
        "detail": "order.admin",
        "documentation": {}
    },
    {
        "label": "OrderAdmin",
        "kind": 6,
        "importPath": "order.admin",
        "description": "order.admin",
        "peekOfCode": "class OrderAdmin(admin.ModelAdmin):\n    list_display = ['id', 'user', 'status']\n    search_fields = ['user__email']\n    list_filter = ['status', 'created_at']  \n# Register CartItem and OrderItem without custom admin\nadmin.site.register(CartItem)\nadmin.site.register(OrderItem)",
        "detail": "order.admin",
        "documentation": {}
    },
    {
        "label": "OrderConfig",
        "kind": 6,
        "importPath": "order.apps",
        "description": "order.apps",
        "peekOfCode": "class OrderConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'order'",
        "detail": "order.apps",
        "documentation": {}
    },
    {
        "label": "Cart",
        "kind": 6,
        "importPath": "order.models",
        "description": "order.models",
        "peekOfCode": "class Cart(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid4, editable=False)\n    user = models.OneToOneField(PetUser, on_delete=models.CASCADE, related_name=\"cart_order\")\n    created_at = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return f\"Cart of {self.user.first_name}\"\n# CartItem model\nclass CartItem(models.Model):\n    cart = models.ForeignKey(\n        Cart, on_delete=models.CASCADE, related_name=\"order_items\"",
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "CartItem",
        "kind": 6,
        "importPath": "order.models",
        "description": "order.models",
        "peekOfCode": "class CartItem(models.Model):\n    cart = models.ForeignKey(\n        Cart, on_delete=models.CASCADE, related_name=\"order_items\"\n    )\n    pet = models.ForeignKey(\n        Pet, on_delete=models.CASCADE, related_name=\"order_cart_items\"  # unique related_name\n    )\n    quantity = models.PositiveIntegerField()\n    price = models.DecimalField(max_digits=10, decimal_places=2, default=0)\n    total_price = models.DecimalField(max_digits=12, decimal_places=2, default=0)",
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "kind": 6,
        "importPath": "order.models",
        "description": "order.models",
        "peekOfCode": "class Order(models.Model):\n    NOT_PAID = 'Not Paid'\n    READY_TO_SHIP = 'Ready To Ship'\n    SHIPPED = 'Shipped'\n    DELIVERED = 'Delivered'\n    CANCELED = 'Canceled'\n    STATUS_CHOICES = [\n        (NOT_PAID, 'Not Paid'),\n        (READY_TO_SHIP, 'Ready To Ship'),\n        (SHIPPED, 'Shipped'),",
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "OrderItem",
        "kind": 6,
        "importPath": "order.models",
        "description": "order.models",
        "peekOfCode": "class OrderItem(models.Model):\n    order = models.ForeignKey(Order, on_delete=models.CASCADE, related_name=\"items\")\n    pet = models.ForeignKey(Pet, on_delete=models.CASCADE)\n    quantity = models.PositiveIntegerField()\n    price = models.DecimalField(max_digits=10, decimal_places=2)\n    total_price = models.DecimalField(max_digits=12, decimal_places=2)\n    def __str__(self):\n        return f\"{self.quantity} x {self.pet.name}\"",
        "detail": "order.models",
        "documentation": {}
    },
    {
        "label": "EmptySerializer",
        "kind": 6,
        "importPath": "order.serializers",
        "description": "order.serializers",
        "peekOfCode": "class EmptySerializer(serializers.Serializer):\n    pass\nclass SimplePetSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Pet\n        fields = ['id', 'name', 'age', 'category']\n# Adding a pet to adoption request\nclass AddCartItemSerializer(serializers.ModelSerializer):\n    pet_id = serializers.IntegerField()\n    class Meta:",
        "detail": "order.serializers",
        "documentation": {}
    },
    {
        "label": "SimplePetSerializer",
        "kind": 6,
        "importPath": "order.serializers",
        "description": "order.serializers",
        "peekOfCode": "class SimplePetSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Pet\n        fields = ['id', 'name', 'age', 'category']\n# Adding a pet to adoption request\nclass AddCartItemSerializer(serializers.ModelSerializer):\n    pet_id = serializers.IntegerField()\n    class Meta:\n        model = CartItem\n        fields = ['id', 'pet_id', 'quantity']",
        "detail": "order.serializers",
        "documentation": {}
    },
    {
        "label": "AddCartItemSerializer",
        "kind": 6,
        "importPath": "order.serializers",
        "description": "order.serializers",
        "peekOfCode": "class AddCartItemSerializer(serializers.ModelSerializer):\n    pet_id = serializers.IntegerField()\n    class Meta:\n        model = CartItem\n        fields = ['id', 'pet_id', 'quantity']\n    def save(self, **kwargs):\n        cart_id = self.context['cart_id']\n        pet_id = self.validated_data['pet_id']\n        quantity = self.validated_data.get('quantity')\n        try:",
        "detail": "order.serializers",
        "documentation": {}
    },
    {
        "label": "UpdateCartItemSerializer",
        "kind": 6,
        "importPath": "order.serializers",
        "description": "order.serializers",
        "peekOfCode": "class UpdateCartItemSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = CartItem\n        fields = ['quantity']\nclass CartItemSerializer(serializers.ModelSerializer):\n    pet = SimplePetSerializer()\n    total_price = serializers.SerializerMethodField(\n        method_name='get_total_price')\n    class Meta:\n        model = CartItem",
        "detail": "order.serializers",
        "documentation": {}
    },
    {
        "label": "CartItemSerializer",
        "kind": 6,
        "importPath": "order.serializers",
        "description": "order.serializers",
        "peekOfCode": "class CartItemSerializer(serializers.ModelSerializer):\n    pet = SimplePetSerializer()\n    total_price = serializers.SerializerMethodField(\n        method_name='get_total_price')\n    class Meta:\n        model = CartItem\n        fields = ['id', 'pet', 'quantity','total_price']\nclass CartSerializer(serializers.ModelSerializer):\n    items = CartItemSerializer(many=True, read_only=True)\n    total_price = serializers.SerializerMethodField(",
        "detail": "order.serializers",
        "documentation": {}
    },
    {
        "label": "CartSerializer",
        "kind": 6,
        "importPath": "order.serializers",
        "description": "order.serializers",
        "peekOfCode": "class CartSerializer(serializers.ModelSerializer):\n    items = CartItemSerializer(many=True, read_only=True)\n    total_price = serializers.SerializerMethodField(\n        method_name='get_total_price')\n    class Meta:\n        model = Cart\n        fields = ['id', 'user', 'total_price','items',]\n        read_only_fields = ['user']\nclass CreateOrderSerializer(serializers.Serializer):\n    cart_id = serializers.UUIDField()",
        "detail": "order.serializers",
        "documentation": {}
    },
    {
        "label": "CreateOrderSerializer",
        "kind": 6,
        "importPath": "order.serializers",
        "description": "order.serializers",
        "peekOfCode": "class CreateOrderSerializer(serializers.Serializer):\n    cart_id = serializers.UUIDField()\n    def validate_cart_id(self, cart_id):\n        if not Cart.objects.filter(pk=cart_id).exists():\n            raise serializers.ValidationError('No cart found with this id')\n        if not CartItem.objects.filter(cart_id=cart_id).exists():\n            raise serializers.ValidationError('Cart is empty')\n        return cart_id\n    def create(self, validated_data):\n        user_id = self.context['user_id']",
        "detail": "order.serializers",
        "documentation": {}
    },
    {
        "label": "UpdateOrderSerializer",
        "kind": 6,
        "importPath": "order.serializers",
        "description": "order.serializers",
        "peekOfCode": "class UpdateOrderSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Order\n        fields = ['status']\nclass OrderSerializer(serializers.ModelSerializer):\n    items = AddCartItemSerializer(many=True)\n    class Meta:\n        model = Order\n        fields = ['id', 'user', 'status', 'total_price', 'created_at', 'items']",
        "detail": "order.serializers",
        "documentation": {}
    },
    {
        "label": "OrderSerializer",
        "kind": 6,
        "importPath": "order.serializers",
        "description": "order.serializers",
        "peekOfCode": "class OrderSerializer(serializers.ModelSerializer):\n    items = AddCartItemSerializer(many=True)\n    class Meta:\n        model = Order\n        fields = ['id', 'user', 'status', 'total_price', 'created_at', 'items']",
        "detail": "order.serializers",
        "documentation": {}
    },
    {
        "label": "OrderService",
        "kind": 6,
        "importPath": "order.services",
        "description": "order.services",
        "peekOfCode": "class OrderService:\n    @staticmethod\n    def create_order(user_id, cart_id):\n        with transaction.atomic():\n            cart = Cart.objects.get(pk=cart_id)\n            cart_items = cart.items.select_related('pet').all()\n            total_price = sum([item.pet.price *\n                               item.quantity for item in cart_items])\n            order = Order.objects.create(\n                user_id=user_id, total_price=total_price)",
        "detail": "order.services",
        "documentation": {}
    },
    {
        "label": "CartViewSet",
        "kind": 6,
        "importPath": "order.views",
        "description": "order.views",
        "peekOfCode": "class CartViewSet(CreateModelMixin, RetrieveModelMixin, DestroyModelMixin, GenericViewSet):\n    serializer_class = CartSerializer\n    permission_classes = [IsAuthenticated]\n    def perform_create(self, serializer):\n        serializer.save(user=self.request.user)\n    def get_queryset(self):\n        if getattr(self, 'swagger_fake_view', False):\n            return Cart.objects.none()\n        return Cart.objects.prefetch_related('items__pet').filter(user=self.request.user)\nclass CartItemViewSet(ModelViewSet):",
        "detail": "order.views",
        "documentation": {}
    },
    {
        "label": "CartItemViewSet",
        "kind": 6,
        "importPath": "order.views",
        "description": "order.views",
        "peekOfCode": "class CartItemViewSet(ModelViewSet):\n    http_method_names = ['get', 'post', 'patch', 'delete']\n    def get_serializer_class(self):\n        if self.request.method == 'POST':\n            return AddCartItemSerializer\n        elif self.request.method == 'PATCH':\n            return UpdateCartItemSerializer\n        return CartItemSerializer\n    def get_serializer_context(self):\n        context = super().get_serializer_context()",
        "detail": "order.views",
        "documentation": {}
    },
    {
        "label": "OrderViewset",
        "kind": 6,
        "importPath": "order.views",
        "description": "order.views",
        "peekOfCode": "class OrderViewset(ModelViewSet):\n    http_method_names = ['get', 'post', 'delete', 'patch', 'head', 'options']\n    @action(detail=True, methods=['post'])\n    def cancel(self, request, pk=None):\n        order = self.get_object()\n        OrderService.cancel_order(order=order, user=request.user)\n        return Response({'status': 'Order canceled'})\n    @action(detail=True, methods=['patch'])\n    def update_status(self, request, pk=None):\n        order = self.get_object()",
        "detail": "order.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pets.migrations.0001_initial",
        "description": "pets.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Pet',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "pets.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "pets.migrations.0002_petreview_updated_at_alter_petimage_image_and_more",
        "description": "pets.migrations.0002_petreview_updated_at_alter_petimage_image_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('pets', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='petreview',\n            name='updated_at',\n            field=models.DateTimeField(auto_now=True),",
        "detail": "pets.migrations.0002_petreview_updated_at_alter_petimage_image_and_more",
        "documentation": {}
    },
    {
        "label": "PetCategoryAdmin",
        "kind": 6,
        "importPath": "pets.admin",
        "description": "pets.admin",
        "peekOfCode": "class PetCategoryAdmin(admin.ModelAdmin):\n    list_display = ['id', 'name', 'description']\n    search_fields = ['name']\n@admin.register(PetImage)\nclass PetImageAdmin(admin.ModelAdmin):\n    list_display = ['id', 'pet']\n@admin.register(Pet)\nclass PetAdmin(admin.ModelAdmin):\n    list_display = ['id', 'name', 'breed', 'age', 'cart_items_count']\n    def cart_items_count(self, obj):",
        "detail": "pets.admin",
        "documentation": {}
    },
    {
        "label": "PetImageAdmin",
        "kind": 6,
        "importPath": "pets.admin",
        "description": "pets.admin",
        "peekOfCode": "class PetImageAdmin(admin.ModelAdmin):\n    list_display = ['id', 'pet']\n@admin.register(Pet)\nclass PetAdmin(admin.ModelAdmin):\n    list_display = ['id', 'name', 'breed', 'age', 'cart_items_count']\n    def cart_items_count(self, obj):\n        return obj.cart_items.count()  # Make sure CartItem has related_name=\"cart_items\"\n    cart_items_count.short_description = 'Cart Items'",
        "detail": "pets.admin",
        "documentation": {}
    },
    {
        "label": "PetAdmin",
        "kind": 6,
        "importPath": "pets.admin",
        "description": "pets.admin",
        "peekOfCode": "class PetAdmin(admin.ModelAdmin):\n    list_display = ['id', 'name', 'breed', 'age', 'cart_items_count']\n    def cart_items_count(self, obj):\n        return obj.cart_items.count()  # Make sure CartItem has related_name=\"cart_items\"\n    cart_items_count.short_description = 'Cart Items'",
        "detail": "pets.admin",
        "documentation": {}
    },
    {
        "label": "PetsConfig",
        "kind": 6,
        "importPath": "pets.apps",
        "description": "pets.apps",
        "peekOfCode": "class PetsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'pets'",
        "detail": "pets.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "pets.category_urls",
        "description": "pets.category_urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.ViewCategories.as_view(), name='category-list'),\n    path('<int:pk>/', views.CategoryDetails.as_view(),\n         name='view-specific-category')\n]",
        "detail": "pets.category_urls",
        "documentation": {}
    },
    {
        "label": "PetFilter",
        "kind": 6,
        "importPath": "pets.filters",
        "description": "pets.filters",
        "peekOfCode": "class PetFilter(FilterSet):\n    class Meta:\n        # model = Pet\n        fields = {\n            'category_id': ['exact'],   # Filter by pet category\n            'age': ['gt', 'lt'],        # Filter by age greater than or less than\n            'price': ['gt', 'lt']  # Filter by adoption fee range\n        }",
        "detail": "pets.filters",
        "documentation": {}
    },
    {
        "label": "PetCategory",
        "kind": 6,
        "importPath": "pets.models",
        "description": "pets.models",
        "peekOfCode": "class PetCategory(models.Model):\n    name = models.CharField(max_length=100)\n    description = models.TextField(blank=True, null=True)\n    def __str__(self):\n        return self.name\nclass Pet(models.Model):\n    name = models.CharField(max_length=100)\n    breed = models.CharField(max_length=100)\n    age = models.IntegerField()\n    adoption_fee = models.DecimalField(max_digits=8, decimal_places=2, default=0.00)",
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "Pet",
        "kind": 6,
        "importPath": "pets.models",
        "description": "pets.models",
        "peekOfCode": "class Pet(models.Model):\n    name = models.CharField(max_length=100)\n    breed = models.CharField(max_length=100)\n    age = models.IntegerField()\n    adoption_fee = models.DecimalField(max_digits=8, decimal_places=2, default=0.00)\n    description = models.TextField(blank=True, null=True)\n    is_available = models.BooleanField(default=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    category = models.ForeignKey(",
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "PetImage",
        "kind": 6,
        "importPath": "pets.models",
        "description": "pets.models",
        "peekOfCode": "class PetImage(models.Model):\n    pet = models.ForeignKey(Pet, on_delete=models.CASCADE, related_name=\"images\")\n    image = CloudinaryField('image')\n    image = models.ImageField(upload_to=\"pets/images/\", validators=[validate_file_size])\n    def __str__(self):\n        return f\"Image of {self.pet.name}\"\nclass PetReview(models.Model):\n    pet = models.ForeignKey(Pet, on_delete=models.CASCADE, related_name=\"reviews\")\n    user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)\n    ratings = models.IntegerField(validators=[MinValueValidator(1), MaxValueValidator(5)])",
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "PetReview",
        "kind": 6,
        "importPath": "pets.models",
        "description": "pets.models",
        "peekOfCode": "class PetReview(models.Model):\n    pet = models.ForeignKey(Pet, on_delete=models.CASCADE, related_name=\"reviews\")\n    user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)\n    ratings = models.IntegerField(validators=[MinValueValidator(1), MaxValueValidator(5)])\n    comment = models.TextField(blank=True, null=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return f\"{self.user.first_name} - {self.ratings}\"\nclass CartRequest(models.Model):",
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "CartRequest",
        "kind": 6,
        "importPath": "pets.models",
        "description": "pets.models",
        "peekOfCode": "class CartRequest(models.Model):\n    pet = models.ForeignKey(Pet, on_delete=models.CASCADE, related_name=\"price\")\n    user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)\n    approved = models.BooleanField(default=False)\n    requested_at = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return f\"{self.user} -> {self.pet.name}\"",
        "detail": "pets.models",
        "documentation": {}
    },
    {
        "label": "DefaultPagination",
        "kind": 6,
        "importPath": "pets.paginations",
        "description": "pets.paginations",
        "peekOfCode": "class DefaultPagination(PageNumberPagination):\n    page_size = 10\n    page_size_query_param = 'page_size'\n    max_page_size = 100",
        "detail": "pets.paginations",
        "documentation": {}
    },
    {
        "label": "IsAdminOrReadOnly",
        "kind": 6,
        "importPath": "pets.permissions",
        "description": "pets.permissions",
        "peekOfCode": "class IsAdminOrReadOnly(permissions.BasePermission):\n    def has_permission(self, request, view):\n        if request.method in permissions.SAFE_METHODS: \n            return True\n        return request.user and request.user.is_staff\nclass IsReviewAuthorOrReadonly(permissions.BasePermission):\n    def has_permission(self, request, view):\n        if request.method in permissions.SAFE_METHODS:\n            return True\n        return request.user and request.user.is_authenticated",
        "detail": "pets.permissions",
        "documentation": {}
    },
    {
        "label": "IsReviewAuthorOrReadonly",
        "kind": 6,
        "importPath": "pets.permissions",
        "description": "pets.permissions",
        "peekOfCode": "class IsReviewAuthorOrReadonly(permissions.BasePermission):\n    def has_permission(self, request, view):\n        if request.method in permissions.SAFE_METHODS:\n            return True\n        return request.user and request.user.is_authenticated\n    def has_object_permission(self, request, view, obj):\n        if request.method in permissions.SAFE_METHODS:\n            return True\n        if request.user.is_staff:\n            return True",
        "detail": "pets.permissions",
        "documentation": {}
    },
    {
        "label": "PetCategorySerializer",
        "kind": 6,
        "importPath": "pets.serializers",
        "description": "pets.serializers",
        "peekOfCode": "class PetCategorySerializer(serializers.ModelSerializer):\n    class Meta:\n        model = PetCategory\n        fields = ['id', 'name', 'description', 'pet_count']        \n    pet_count = serializers.IntegerField(read_only=True, help_text=\"Return the number product in this category\")\n# 2. Pet Image Serializer\nclass PetImageSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = PetImage\n        fields = ['id', 'image']",
        "detail": "pets.serializers",
        "documentation": {}
    },
    {
        "label": "PetImageSerializer",
        "kind": 6,
        "importPath": "pets.serializers",
        "description": "pets.serializers",
        "peekOfCode": "class PetImageSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = PetImage\n        fields = ['id', 'image']\nclass PetSerializer(serializers.ModelSerializer):\n    images = PetImageSerializer(many=True, read_only=True)\n    price_with_tax = serializers.SerializerMethodField()  # move here\n    class Meta:\n        model = Pet\n        fields = [",
        "detail": "pets.serializers",
        "documentation": {}
    },
    {
        "label": "PetSerializer",
        "kind": 6,
        "importPath": "pets.serializers",
        "description": "pets.serializers",
        "peekOfCode": "class PetSerializer(serializers.ModelSerializer):\n    images = PetImageSerializer(many=True, read_only=True)\n    price_with_tax = serializers.SerializerMethodField()  # move here\n    class Meta:\n        model = Pet\n        fields = [\n            'id', 'name', 'description', 'age', 'adoption_fee',\n            'price_with_tax', 'is_available', 'category', 'images'\n        ]\n    def get_price_with_tax(self, obj):",
        "detail": "pets.serializers",
        "documentation": {}
    },
    {
        "label": "SimpleUserSerializer",
        "kind": 6,
        "importPath": "pets.serializers",
        "description": "pets.serializers",
        "peekOfCode": "class SimpleUserSerializer(serializers.ModelSerializer):\n    name = serializers.SerializerMethodField(method_name='get_current_user_name')\n    class Meta:\n        model = get_user_model()\n        fields = ['id', 'name']\n    def get_current_user_name(self, obj):\n        return obj.get_full_name()\n# 5. Pet Review Serializer\nclass PetReviewSerializer(serializers.ModelSerializer):\n    user = serializers.SerializerMethodField(method_name='get_user')",
        "detail": "pets.serializers",
        "documentation": {}
    },
    {
        "label": "PetReviewSerializer",
        "kind": 6,
        "importPath": "pets.serializers",
        "description": "pets.serializers",
        "peekOfCode": "class PetReviewSerializer(serializers.ModelSerializer):\n    user = serializers.SerializerMethodField(method_name='get_user')\n    class Meta:\n        model = PetReview\n        fields = ['id', 'user', 'pet', 'ratings', 'comment']\n        read_only_fields = ['user', 'pet']\n    def get_user(self, obj):\n        return SimpleUserSerializer(obj.user).data\n    def create(self, validated_data):\n        pet_id = self.context['pet_id']",
        "detail": "pets.serializers",
        "documentation": {}
    },
    {
        "label": "CartRequestSerializer",
        "kind": 6,
        "importPath": "pets.serializers",
        "description": "pets.serializers",
        "peekOfCode": "class CartRequestSerializer(serializers.ModelSerializer):\n    user = SimpleUserSerializer(read_only=True)\n    pet = PetSerializer(read_only=True)\n    class Meta:\n        model = CartRequest\n        fields = ['id', 'user', 'pet', 'approved', 'requested_at']\n        read_only_fields = ['user', 'pet', 'approved', 'requested_at']",
        "detail": "pets.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "pets.urls",
        "description": "pets.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.PetListByCategoryView.as_view(), name='pet-list-by-category'),\n    path('<int:id>/',views.PetDetails.as_view(), name='pet-list'),\n]",
        "detail": "pets.urls",
        "documentation": {}
    },
    {
        "label": "validate_file_size",
        "kind": 2,
        "importPath": "pets.validators",
        "description": "pets.validators",
        "peekOfCode": "def validate_file_size(file):\n    max_size = 10\n    max_size_in_bytes = max_size * 1024 * 1024\n    if file.size > max_size_in_bytes:\n        raise ValidationError(f\"File can not be larger than {max_size}MB!\")",
        "detail": "pets.validators",
        "documentation": {}
    },
    {
        "label": "PetViewSet",
        "kind": 6,
        "importPath": "pets.views",
        "description": "pets.views",
        "peekOfCode": "class PetViewSet(ModelViewSet):\n    queryset = Pet.objects.all()\n    serializer_class = PetSerializer\n    filter_backends = [DjangoFilterBackend, SearchFilter, OrderingFilter]\n    filterset_class = PetFilter\n    pagination_class = DefaultPagination\n    search_fields = ['name', 'description']\n    ordering_fields = ['price', 'updated_at']\n    permission_classes = [IsAdminOrReadOnly]\n    @swagger_auto_schema(operation_summary='Retrieve a list of pets')",
        "detail": "pets.views",
        "documentation": {}
    },
    {
        "label": "PetImageViewSet",
        "kind": 6,
        "importPath": "pets.views",
        "description": "pets.views",
        "peekOfCode": "class PetImageViewSet(ModelViewSet):\n    serializer_class = PetImageSerializer\n    permission_classes = [IsAdminOrReadOnly]\n    def get_queryset(self):\n        return PetImage.objects.filter(pet_id=self.kwargs.get('pet_pk'))\n    def perform_create(self, serializer):\n        serializer.save(pet_id=self.kwargs.get('pet_pk'))\n# Pet Category ViewSet\nclass PetCategoryViewSet(ModelViewSet):\n    permission_classes = [IsAdminOrReadOnly]",
        "detail": "pets.views",
        "documentation": {}
    },
    {
        "label": "PetCategoryViewSet",
        "kind": 6,
        "importPath": "pets.views",
        "description": "pets.views",
        "peekOfCode": "class PetCategoryViewSet(ModelViewSet):\n    permission_classes = [IsAdminOrReadOnly]\n    queryset = PetCategory.objects.annotate(\n        pet_count=Count('pets')).all()\n    serializer_class = PetCategorySerializer\n# class PetCategoryViewSet(ModelViewSet):\n#     serializer_class = PetCategorySerializer\n#     queryset = PetCategory.objects.annotate(\n#         pet_count=Count('pets') \n#     ).all()",
        "detail": "pets.views",
        "documentation": {}
    },
    {
        "label": "PetReviewViewSet",
        "kind": 6,
        "importPath": "pets.views",
        "description": "pets.views",
        "peekOfCode": "class PetReviewViewSet(ModelViewSet):\n    serializer_class = PetReviewSerializer\n    permission_classes = [IsReviewAuthorOrReadonly]\n    def perform_create(self, serializer):\n        serializer.save(user=self.request.user)\n    def perform_update(self, serializer):\n        serializer.save(user=self.request.user)\n    def get_queryset(self):\n        return PetReview.objects.filter(pet_id=self.kwargs.get('pet_pk'))\n    def get_serializer_context(self):",
        "detail": "pets.views",
        "documentation": {}
    },
    {
        "label": "CartRequestViewSet",
        "kind": 6,
        "importPath": "pets.views",
        "description": "pets.views",
        "peekOfCode": "class CartRequestViewSet(ModelViewSet):\n    serializer_class = CartRequestSerializer\n    permission_classes = [IsAdminOrReadOnly]\n    def get_queryset(self):\n        return CartRequest.objects.all()\n    def perform_create(self, serializer):\n        serializer.save(user=self.request.user)\nclass PetListByCategoryView(TemplateView):\n    template_name = \"pets/pet_list_by_category.html\"\n    def get_context_data(self, **kwargs):",
        "detail": "pets.views",
        "documentation": {}
    },
    {
        "label": "PetListByCategoryView",
        "kind": 6,
        "importPath": "pets.views",
        "description": "pets.views",
        "peekOfCode": "class PetListByCategoryView(TemplateView):\n    template_name = \"pets/pet_list_by_category.html\"\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        # Fetch all categories with their pets\n        categories = PetCategory.objects.all()\n        category_pets = {cat: Pet.objects.filter(category=cat) for cat in categories}\n        context['category_pets'] = category_pets\n        return context\nclass PetDetails(DetailView):",
        "detail": "pets.views",
        "documentation": {}
    },
    {
        "label": "PetDetails",
        "kind": 6,
        "importPath": "pets.views",
        "description": "pets.views",
        "peekOfCode": "class PetDetails(DetailView):\n        model = Pet\n        template_name = \"pets/pet_detail.html\"  # template for single pet\n        context_object_name = \"pet\"\n        pk_url_kwarg = \"id\"  # matches <int:id> in urls.py",
        "detail": "pets.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "pet_adoption.asgi",
        "description": "pet_adoption.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "pet_adoption.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-frisf^xxi**a3#)^t&^nd6@gs62l_)!7%v1mfwjngi-6$!kaz7'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = False  \nALLOWED_HOSTS = [\".vercel.app\", '127.0.0.1']\nAUTH_USER_MODEL = 'users.PetUser'\n# Application definition",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-frisf^xxi**a3#)^t&^nd6@gs62l_)!7%v1mfwjngi-6$!kaz7'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = False  \nALLOWED_HOSTS = [\".vercel.app\", '127.0.0.1']\nAUTH_USER_MODEL = 'users.PetUser'\n# Application definition\nINSTALLED_APPS = [\n    'whitenoise.runserver_nostatic',\n    'django.contrib.admin',\n    'django.contrib.auth',",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "DEBUG = False  \nALLOWED_HOSTS = [\".vercel.app\", '127.0.0.1']\nAUTH_USER_MODEL = 'users.PetUser'\n# Application definition\nINSTALLED_APPS = [\n    'whitenoise.runserver_nostatic',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "ALLOWED_HOSTS = [\".vercel.app\", '127.0.0.1']\nAUTH_USER_MODEL = 'users.PetUser'\n# Application definition\nINSTALLED_APPS = [\n    'whitenoise.runserver_nostatic',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'users.PetUser'\n# Application definition\nINSTALLED_APPS = [\n    'whitenoise.runserver_nostatic',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'whitenoise.runserver_nostatic',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'corsheaders',\n    'cart',",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    ),\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.IsAuthenticated',  # secure by default\n    ],\n    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',\n    'PAGE_SIZE': 10,\n    'COERCE_DECIMAL_TO_STRING': False,",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'corsheaders.middleware.CorsMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'debug_toolbar.middleware.DebugToolbarMiddleware',\n    'django.middleware.security.SecurityMiddleware',\n    'whitenoise.middleware.WhiteNoiseMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "ROOT_URLCONF = 'pet_adoption.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "WSGI_APPLICATION = 'pet_adoption.wsgi.app'\nCORS_ALLOWED_ORIGINS = [\n    'http://localhost:5173',\n    'https://pet-adoption-a5vw.vercel.app',\n    ]\n# CORS_ALLOW_ALL_ORIGINS = True\nINTERNAL_IPS = [\n    \"127.0.0.1\",\n]\n# Database",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOWED_ORIGINS",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "CORS_ALLOWED_ORIGINS = [\n    'http://localhost:5173',\n    'https://pet-adoption-a5vw.vercel.app',\n    ]\n# CORS_ALLOW_ALL_ORIGINS = True\nINTERNAL_IPS = [\n    \"127.0.0.1\",\n]\n# Database\n# https://docs.djangoproject.com/en/5.2/ref/settings/#databases",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "INTERNAL_IPS",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "INTERNAL_IPS = [\n    \"127.0.0.1\",\n]\n# Database\n# https://docs.djangoproject.com/en/5.2/ref/settings/#databases\n# DATABASES = {\n#     'default': {\n#         'ENGINE': 'django.db.backends.sqlite3',\n#         'NAME': BASE_DIR / 'db.sqlite3',\n#     }",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "DATABASES = {\n    'default': {        \n        'ENGINE':'django.db.backends.postgresql',\n        'NAME': config('dbname'),\n        'USER': config('user'),\n        'PASSWORD':config('password'),\n        'HOST':config('host'),\n        'PORT':config('port')\n    }\n}",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_FILE_STORAGE",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\nSTATIC_FILES_DIR = [BASE_DIR / 'static']",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\nSTATIC_FILES_DIR = [BASE_DIR / 'static']\nSTATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\nSTATIC_FILES_DIR = [BASE_DIR / 'static']\nSTATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'\nMEDIA_URL = '/media/'",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\nSTATIC_FILES_DIR = [BASE_DIR / 'static']\nSTATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.2/howto/static-files/\nSTATIC_URL = 'static/'\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\nSTATIC_FILES_DIR = [BASE_DIR / 'static']\nSTATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "STATIC_URL = 'static/'\nSTATIC_ROOT = BASE_DIR / 'staticfiles'\nSTATIC_FILES_DIR = [BASE_DIR / 'static']\nSTATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "STATIC_ROOT = BASE_DIR / 'staticfiles'\nSTATIC_FILES_DIR = [BASE_DIR / 'static']\nSTATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'COERCE_DECIMAL_TO_STRING': False,",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_FILES_DIR",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "STATIC_FILES_DIR = [BASE_DIR / 'static']\nSTATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'COERCE_DECIMAL_TO_STRING': False,\n    'DEFAULT_AUTHENTICATION_CLASSES': (",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_STORAGE",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'\nMEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'COERCE_DECIMAL_TO_STRING': False,\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\nMEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'COERCE_DECIMAL_TO_STRING': False,\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    ),",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "MEDIA_ROOT = BASE_DIR / 'media'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'COERCE_DECIMAL_TO_STRING': False,\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    ),\n    # 'DEFAULT_PERMISSION_CLASSES': [",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'COERCE_DECIMAL_TO_STRING': False,\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    ),\n    # 'DEFAULT_PERMISSION_CLASSES': [\n    #     'rest_framework.permissions.IsAuthenticated',\n    # ]\n}",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'COERCE_DECIMAL_TO_STRING': False,\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework_simplejwt.authentication.JWTAuthentication',\n    ),\n    # 'DEFAULT_PERMISSION_CLASSES': [\n    #     'rest_framework.permissions.IsAuthenticated',\n    # ]\n}\n# JWT config",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "SIMPLE_JWT",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "SIMPLE_JWT = {\n    'AUTH_HEADER_TYPES': ('Bearer',),   # use Bearer instead of JWT\n    \"ACCESS_TOKEN_LIFETIME\": timedelta(days=1),\n}\n# Djoser config\nDJOSER = {\n    'SERIALIZERS': {\n        'user_create': 'users.serializers.UserCreateSerializer',\n        'current_user': 'users.serializers.UserSerializer'\n    },",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "DJOSER",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "DJOSER = {\n    'SERIALIZERS': {\n        'user_create': 'users.serializers.UserCreateSerializer',\n        'current_user': 'users.serializers.UserSerializer'\n    },\n}\n# Swagger config\nSWAGGER_SETTINGS = {\n    'USE_SESSION_AUTH': False,   #  prevents redirect to /accounts/login/\n    'SECURITY_DEFINITIONS': {",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "SWAGGER_SETTINGS",
        "kind": 5,
        "importPath": "pet_adoption.settings",
        "description": "pet_adoption.settings",
        "peekOfCode": "SWAGGER_SETTINGS = {\n    'USE_SESSION_AUTH': False,   #  prevents redirect to /accounts/login/\n    'SECURITY_DEFINITIONS': {\n        'Bearer': {\n            'type': 'apiKey',\n            'name': 'Authorization',\n            'in': 'header',\n            'description': 'Format: Bearer <your_token>'\n        }\n    }",
        "detail": "pet_adoption.settings",
        "documentation": {}
    },
    {
        "label": "schema_view",
        "kind": 5,
        "importPath": "pet_adoption.urls",
        "description": "pet_adoption.urls",
        "peekOfCode": "schema_view = get_schema_view(\n    openapi.Info(\n        title=\"Pet Adoption API\",\n        default_version='v1',\n        description=\"API Documentation for Pet Adoption Project\",\n        terms_of_service=\"https://www.google.com/policies/terms/\",\n        contact=openapi.Contact(email=\"contact@petadoption.com\"),\n        license=openapi.License(name=\"BSD License\"),\n    ),\n    public=True,",
        "detail": "pet_adoption.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "pet_adoption.urls",
        "description": "pet_adoption.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', api_root_view),\n    path('api/v1/', include('api.urls'), name='api-root'), \n    # path(\"api/v1/accounts/\", include(\"users.urls\")),\n    path(\"pets/\", include(\"pets.urls\")),\n    path('swagger/', schema_view.with_ui('swagger',\n         cache_timeout=0), name='schema-swagger-ui'),\n    path('redoc/', schema_view.with_ui('redoc',\n         cache_timeout=0), name='schema-redoc'),",
        "detail": "pet_adoption.urls",
        "documentation": {}
    },
    {
        "label": "api_root_view",
        "kind": 2,
        "importPath": "pet_adoption.views",
        "description": "pet_adoption.views",
        "peekOfCode": "def api_root_view(request):\n    return redirect('api-root')",
        "detail": "pet_adoption.views",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "pet_adoption.wsgi",
        "description": "pet_adoption.wsgi",
        "peekOfCode": "app = get_wsgi_application()",
        "detail": "pet_adoption.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "users.migrations.0001_initial",
        "description": "users.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='PetUser',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "users.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "CustomUserAdmin",
        "kind": 6,
        "importPath": "users.admin",
        "description": "users.admin",
        "peekOfCode": "class CustomUserAdmin(UserAdmin):\n    model = PetUser\n    list_display = ('email', 'first_name', 'last_name', 'is_active')\n    list_filter = ('is_staff', 'is_active')\n    fieldsets = (\n        (None, {'fields': ('email', 'password')}),\n        ('Personal Info', {'fields': ('first_name', 'last_name', 'address', 'phone_number')}),\n        ('Permissions', {'fields': ('is_staff', 'is_active', 'is_superuser', 'groups', 'user_permissions')}),\n        ('Important Dates', {'fields': ('last_login', 'date_joined')}),\n    )",
        "detail": "users.admin",
        "documentation": {}
    },
    {
        "label": "UsersConfig",
        "kind": 6,
        "importPath": "users.apps",
        "description": "users.apps",
        "peekOfCode": "class UsersConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'users'",
        "detail": "users.apps",
        "documentation": {}
    },
    {
        "label": "CustomUserManager",
        "kind": 6,
        "importPath": "users.managers",
        "description": "users.managers",
        "peekOfCode": "class CustomUserManager(BaseUserManager):\n    def create_user(self, email, password=None, **extra_fields):\n        if not email:\n            raise ValueError('The Email field must be set')\n        email = self.normalize_email(email)\n        user = self.model(email=email, **extra_fields)\n        user.set_password(password)\n        user.save(using=self._db)\n        return user\n    def create_superuser(self, email, password=None, **extra_fields):",
        "detail": "users.managers",
        "documentation": {}
    },
    {
        "label": "PetUser",
        "kind": 6,
        "importPath": "users.models",
        "description": "users.models",
        "peekOfCode": "class PetUser(AbstractUser):\n    username = None\n    email = models.EmailField(unique=True)\n    address = models.TextField(blank=True, null=True)\n    phone_number = models.CharField(max_length=15, blank=True, null=True)\n    USERNAME_FIELD = 'email'  # Use email instead of username\n    REQUIRED_FIELDS = []\n    objects = CustomUserManager()\n    def __str__(self):\n        return self.email",
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "UserCreateSerializer",
        "kind": 6,
        "importPath": "users.serializers",
        "description": "users.serializers",
        "peekOfCode": "class UserCreateSerializer(BaseUserCreateSerializer):\n    class Meta(BaseUserCreateSerializer.Meta):\n        model = PetUser\n        fields = [\n            'id',\n            'email',\n            'password',\n            'first_name',\n            'last_name',\n            'address',",
        "detail": "users.serializers",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "users.serializers",
        "description": "users.serializers",
        "peekOfCode": "class UserSerializer(BaseUserSerializer):\n    class Meta(BaseUserSerializer.Meta):\n        model = PetUser\n        ref_name = 'CustomUser'   # keep if you want unique schema name\n        fields = [\n            'id',\n            'email',\n            'first_name',\n            'last_name',\n            'address',",
        "detail": "users.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "users.urls",
        "description": "users.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"register/\", register_view, name=\"register\"),\n]",
        "detail": "users.urls",
        "documentation": {}
    },
    {
        "label": "register_view",
        "kind": 2,
        "importPath": "users.views",
        "description": "users.views",
        "peekOfCode": "def register_view(request):\n    return render(request, \"users/register.html\")",
        "detail": "users.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'pet_adoption.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]